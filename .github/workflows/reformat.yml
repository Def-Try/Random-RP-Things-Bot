name: Reformat code

on: [push]

jobs:
  reformat:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    permissions:
      contents: write
      pull-requests: write
    steps:
    - uses: actions/checkout@v4
      with:
        ssh-key: ${{ secrets.Action_WRITE_Access_Key }}
    - uses: connor-baer/action-sync-branch@main
      with:
        branch: auto-reformat
        token: ${{ secrets.GITHUB_TOKEN }}
        force: true
      continue-on-error: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install --requirement requirements.txt
        pip install autopep8
        pip install git+https://github.com/psf/black
        pip install reorder-python-imports
    - name: Create log files
      run: |
        mkdir ref-logs
        touch ref-logs/autopep8-reformat.txt
        touch ref-logs/black-reformat.txt
        touch ref-logs/imports-reorder.txt
        echo LOGFILE_NAME="logs-$(python3 -V | cut -c 8-)" >> $GITHUB_ENV
    - name: Imports reordering
      run: |
        for f in $(git ls-files '*.py'); do
          echo "Reordering imports in " $f >> ref-logs/imports-reorder.txt
          reorder-python-imports $f || true >> ref-logs/imports-reorder.txt
        done
    - name: AutoPEP8 code reformatting
      run: |
        for f in $(git ls-files '*.py'); do
          echo "Reformatting" $f >> ref-logs/autopep8-reformat.txt
          autopep8 -i $f >> ref-logs/autopep8-reformat.txt
        done
    - name: Black code reformatting
      run: |
        for f in $(git ls-files '*.py'); do
          echo "Reformatting" $f >> ref-logs/black-reformat.txt
          python -m black $f >> ref-logs/black-reformat.txt
        done
    - uses: actions/upload-artifact@v4
      with:
        name: ${{env.LOGFILE_NAME}}
        path: ref-logs/
    - name: Remove log files
      run: |
        rm -r ref-logs
    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        branch: auto-reformat
        commit_user_name: Auto Reformatter
        commit_user_email: googer@mindurka.fun
        commit_author: googer <googer@mindurka.fun>
        create_branch: true
        skip_dirty_check: false
        skip_fetch: false
    - uses: gr2m/create-or-update-pull-request-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        title: "Automatic reformat PR"
        body: "Generated by github actions workflow."
        commit-message: "Commit uncommited changes on workflow"
        author: "googer <googer@mindurka.fun>"
        update-pull-request-title-and-body: true
